name: Validate API Version

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  check-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # necesario para comparar con main

      - name: Get current API version
        id: current
        run: |
          VERSION=$(grep -Eo 'version\\("v[0-9]+\.[0-9]+\.[0-9]+"' src/main/java/**/OpenApiConfig.java | grep -Eo 'v[0-9]+\.[0-9]+\.[0-9]+')
          if [ -z "$VERSION" ]; then
            echo "❌ No API version found in OpenApiConfig.java"
            exit 1
          fi
          echo "Current API version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get previous API version (from main)
        id: previous
        run: |
          git fetch origin main
          PREV_VERSION=$(git show origin/main:src/main/java/**/OpenApiConfig.java | grep -Eo 'version\\("v[0-9]+\.[0-9]+\.[0-9]+"' | grep -Eo 'v[0-9]+\.[0-9]+\.[0-9]+')
          if [ -z "$PREV_VERSION" ]; then
            echo "⚠️  No version found in main branch — skipping comparison."
            exit 0
          fi
          echo "Previous API version: $PREV_VERSION"
          echo "version=$PREV_VERSION" >> $GITHUB_OUTPUT

      - name: Compare API versions
        run: |
          echo "Current:  ${{ steps.current.outputs.version }}"
          echo "Previous: ${{ steps.previous.outputs.version }}"

          if [ "${{ steps.current.outputs.version }}" == "${{ steps.previous.outputs.version }}" ]; then
            echo "❌ API version must be incremented before pushing changes."
            exit 1
          else
            echo "✅ API version changed — OK to merge."
          fi

